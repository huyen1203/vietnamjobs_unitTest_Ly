package ApplyCVTest;
import com.demo.entities.Account;
import com.demo.entities.TypeAccount;
import com.demo.repositories.AccountRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;

import java.util.Date;

import static org.junit.jupiter.api.Assertions.*;
@DataJpaTest
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
public class AccountRepository_findbyUsernameTest {

    @Autowired
    private TestEntityManager entityManager;

    @Autowired
    private AccountRepository accountRepository;

    // ‚úÖ Test 1: T√¨m ki·∫øm t√†i kho·∫£n v·ªõi username h·ª£p l·ªá
    @Test
    void testFindbyUsername_WithValidUsername_ReturnsAccount() {
        // T·∫°o m·ªôt TypeAccount ƒë·ªÉ g·∫Øn v√†o Account
        TypeAccount typeAccount = new TypeAccount();
        typeAccount.setName("Seeker");
        entityManager.persist(typeAccount);

        // Kh·ªüi t·∫°o ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng c·ªßa Account
        Account account = new Account();
        account.setUsername("validuser");                            // üü¢ T√™n ƒëƒÉng nh·∫≠p ƒë√∫ng v·ªõi ƒë·∫ßu v√†o test
        account.setPassword("password123");                          // M·∫≠t kh·∫©u
        account.setCreated(new Date());                              // Ng√†y t·∫°o
        account.setEmail("validuser@mail.com");                      // Email
        account.setStatus(true);                                     // Tr·∫°ng th√°i t√†i kho·∫£n
        account.setSecurityCode("ABC123");                           // M√£ b·∫£o m·∫≠t
        account.setWallet(500.0);                                    // S·ªë d∆∞ v√≠
        account.setTypeAccount(typeAccount);                         // Lo·∫°i t√†i kho·∫£n

        // L∆∞u d·ªØ li·ªáu v√†o database test
        entityManager.persist(account);
        entityManager.flush();

        // G·ªçi ph∆∞∆°ng th·ª©c c·∫ßn test
        Account found = accountRepository.findbyUsername("validuser");

        // In ra ƒë·ªÉ ki·ªÉm ch·ª©ng
        System.out.println("‚úÖ Mong mu·ªën: username = validuser");
        System.out.println("üì§ Th·ª±c t·∫ø: username = " + (found != null ? found.getUsername() : "null"));

        // Ki·ªÉm tra k·∫øt qu·∫£
        assertNotNull(found);                                 // ƒê·∫£m b·∫£o c√≥ account tr·∫£ v·ªÅ
        assertEquals("validuser", found.getUsername());       // So s√°nh ch√≠nh x√°c username
    }


    // ‚úÖ Test 2: T√¨m ki·∫øm t√†i kho·∫£n v·ªõi username kh√¥ng t·ªìn t·∫°i
    @Test
    void testFindbyUsername_WithNonExistentUsername_ReturnsNull() {
        Account found = accountRepository.findbyUsername("ghost");

        System.out.println("‚úÖ Mong mu·ªën: null");
        System.out.println("üì§ Th·ª±c t·∫ø: " + found);

        assertNull(found);
    }

    // ‚úÖ Test 3: T√¨m ki·∫øm t√†i kho·∫£n v·ªõi gi√° tr·ªã null
    @Test
    void testFindbyUsername_WithNullUsername_ReturnsNull() {
        Account found = accountRepository.findbyUsername(null);

        System.out.println("‚úÖ Mong mu·ªën: null");
        System.out.println("üì§ Th·ª±c t·∫ø: " + found);

        assertNull(found);
    }

    // ‚úÖ Test 4: T√¨m ki·∫øm t√†i kho·∫£n v·ªõi chu·ªói r·ªóng
    @Test
    void testFindbyUsername_WithEmptyUsername_ReturnsNull() {
        Account found = accountRepository.findbyUsername("");

        System.out.println("‚úÖ Mong mu·ªën: null");
        System.out.println("üì§ Th·ª±c t·∫ø: " + found);

        assertNull(found);
    }
}